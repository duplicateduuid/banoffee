name: Pull Request CI

on: [pull_request]

# TODO: cache dependencies instead of having to reinstall again on every job
jobs:
  install:
    name: Installing Packages
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Install Nix
        uses: duplicateduuid/install-nix-action@8887e596b4ee1134dae06b98d573bd674693f47c
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Install Dependencies
        run: |
          nix develop
          cd apps/server && go get .
          cd apps/resources-recommender && python3 -m venv . && source bin/activate && pip3 install .
          cd apps/web && yarn install

  linter:
    name: Run Linter Checks
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Install Nix
        uses: duplicateduuid/install-nix-action@8887e596b4ee1134dae06b98d573bd674693f47c
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Install Dependencies
        run: |
          nix develop
          cd apps/server && go get .
          cd apps/resources-recommender && python3 -m venv . && source bin/activate && pip3 install .
          cd apps/web && yarn install

      - name: Run Linters
        run: |
          nix develop
          cd apps/server && golangci-lint run
          cd apps/web && yarn lint

  build:
    name: Run Builds
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Install Nix
        uses: duplicateduuid/install-nix-action@8887e596b4ee1134dae06b98d573bd674693f47c
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Install Dependencies
        run: |
          nix develop
          cd apps/server && go get .
          cd apps/resources-recommender && python3 -m venv . && source bin/activate && pip3 install .
          cd apps/web && yarn install

      - name: Run Builds
        run: |
          nix develop
          cd apps/server && go build
          cd apps/web && yarn build
          cd apps/extension/web-extension && yarn build
          cd apps/resources-recommender && python3 -m venv . && source bin/activate && mypy main.py

  # TODO: Needs to setup a local postgres to run this
  # tests:
  #     name: Run Tests
  #     runs-on: ubuntu-latest
  #     needs: install
  #     steps:
  #       - name: Checkout
  #         uses: actions/checkout@v3
  #         with:
  #           fetch-depth: 2
  #
  #       - name: Run Tests
  #         run: |
  #           nix develop
  #           cd apps/server && go test
